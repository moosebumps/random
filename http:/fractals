<!DOCTYPE html>
<html>

<body>
    <title>Mandelbrot Fractal Test by Drawn Swords</title>

    <body style="background-color:black;">
 
     <button onclick="myFunction()">Customise Mandelbrot canvas</button>

        <p id="demo"></p>

        <script>
            function myFunction() {
              var txt;
              var person = prompt("Input script. See /script.html for more details :)", ""> ");
              if (person == null || person == "") {
                txt = "User cancelled the prompt.";
              } else {
                
              }
              document.getElementById("demo").innerHTML = txt;
            }
        </script>

    </body>

</html>


</body>
<script>
    (() => {
       
          const myCanvas = document.createElement('canvas');
          myCanvas.width = 1920;
          myCanvas.height = 1080;
          document.body.appendChild(myCanvas);
          const ctx = myCanvas.getContext('2d');

    
          function checkIfBelongsToMandelbrotSet(x,y) {
            let realComponentOfResult = x;
            let imaginaryComponentOfResult = y;
   
            const maxIterations = 350;
            for (let i = 0; i < maxIterations; i++) {
              const tempRealComponent = realComponentOfResult * realComponentOfResult - imaginaryComponentOfResult * imaginaryComponentOfResult + x;
              const tempImaginaryComponent = 2.0 * realComponentOfResult * imaginaryComponentOfResult + y;
              realComponentOfResult = tempRealComponent;
              imaginaryComponentOfResult = tempImaginaryComponent;
            
              if (realComponentOfResult * imaginaryComponentOfResult > 5) {
               return (i / maxIterations * 100);
              }
            }
            // Return zero if in set
            return 0;
          }

          // Set appearance settings
          const magnificationFactor = 600;
          const panX = 2.0;
          const panY = 0.9;
          for (let x = 0; x < myCanvas.width; x++) {
            for (let y = 0; y < myCanvas.height; y++) {
              const belongsToSet = checkIfBelongsToMandelbrotSet(x / magnificationFactor - panX, y / magnificationFactor - panY);
              if (belongsToSet === 0) {
                ctx.fillStyle = '#000';
                // Draw a black pixel
                ctx.fillRect(x,y, 1,1);
              } else {
                ctx.fillStyle = `hsl(0, 100%, ${belongsToSet}%)`;
                // Draw a colorful pixel
                ctx.fillRect(x,y, 2,7);
              }
            }
          }
      })();
</script>
</body>

</html>
